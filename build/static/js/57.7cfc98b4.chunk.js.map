{"version":3,"sources":["ScheduledLivePages/ScheduledLiveMemoryGame.js","ScheduledLivePages/CircleTimer.js","NavBars/ScheduledLiveNavBar.js","MemoryGame/MemoryGame.js","Images/navbar-logo.svg"],"names":["ScheduledLiveMemoryGame","match","database","firebase","firestore","dispatch","useDispatch","useState","Livelinks","setLivelinks","fbimg1","setfbimg1","fbimg2","setfbimg2","fbimg3","setfbimg3","fbimg4","setfbimg4","fbimg5","setfbimg5","fbimg6","setfbimg6","loading","setloading","dataurl","today","settoday","nscore","setnscore","bestscore","setbestscore","handleFireBaseScoreUpload","n","todo","score","ref","params","id","update","setnewscore","e","a","alert","getDoc","collection","doc","slug","get","snapshot","data","array_data","map","item","index","type","payload","day","url","useEffect","console","log","once","then","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","scr","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","style","backgroundColor","class","color","height","width","className","Bday","rel","href","timerProps","isPlaying","size","strokeWidth","timerProps1","timerProps2","renderTime","dimension","time","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CircleTimer","endTime","remainingTime","daysDuration","ceil","paddingTop","paddingBottom","isMobileOnly","display","justifyContent","fontSize","colors","duration","initialRemainingTime","elapsedTime","onComplete","totalElapsedTime","isTablet","ScheduledLiveNavBar","daystep","useSelector","state","navstate","setnavstate","window","addEventListener","changeBackground","scrollY","src","require","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MemoryGame","newGame","setNewGame","isstarted","setisstarted","list","setList","visibleItems","setVisibleItems","finishedItems","setFinishedItems","winner","setWinner","now","starttime","setstarttime","maincontent","date","renderer","Completionist","onClick","sort","random","completed","padding","includes","key","concat","firstIndex","secondIndex","description","textAlign","module","exports"],"mappings":"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","file":"static/js/57.7cfc98b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MemoryGame from \"../MemoryGame/MemoryGame\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveMemoryGame({ match }) {\r\n  const database = firebase.firestore();\r\n  let dispatch = useDispatch();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [fbimg1, setfbimg1] = useState(\"\");\r\n  const [fbimg2, setfbimg2] = useState(\"\");\r\n  const [fbimg3, setfbimg3] = useState(\"\");\r\n  const [fbimg4, setfbimg4] = useState(\"\");\r\n  const [fbimg5, setfbimg5] = useState(\"\");\r\n  const [fbimg6, setfbimg6] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  const [nscore, setnscore] = useState(0);\r\n  const [bestscore, setbestscore] = useState(\"\");\r\n  const handleFireBaseScoreUpload = (n) => {\r\n    const todoRef = firebase.database().ref(\"MemoryGame/\" + match.params.id);\r\n    const todo = {\r\n      score: n,\r\n    };\r\n    todoRef.update(todo);\r\n  };\r\n  const setnewscore = async (e) => {\r\n    setnscore(e);\r\n    if (nscore < bestscore) {\r\n      alert(\"you scored better than your previous one! keep playing\");\r\n      setbestscore(nscore);\r\n      handleFireBaseScoreUpload(e);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"memorygame\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/MemoryGame/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img1 = snapshot.val().url1;\r\n        setfbimg1(img1);\r\n        var img2 = snapshot.val().url2;\r\n        setfbimg2(img2);\r\n        var img3 = snapshot.val().url3;\r\n        setfbimg3(img3);\r\n        var img4 = snapshot.val().url4;\r\n        setfbimg4(img4);\r\n        var img5 = snapshot.val().url5;\r\n        setfbimg5(img5);\r\n        var img6 = snapshot.val().url6;\r\n        setfbimg6(img6);\r\n        var scr = snapshot.val().score;\r\n        setbestscore(scr);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    // console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-3\"></div>\r\n          <div class=\"col-lg-6\">\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {new Date(Livelinks.Bday_date) -\r\n                  +new Date() -\r\n                  19800000 -\r\n                  86400000 * (dataurl.length - today - 1) >\r\n                0 ? (\r\n                  <div>\r\n                    <h5 className=\"example\"> This Gift opens in </h5>\r\n                    <CircleTimer\r\n                      Bday={\r\n                        +new Date(Livelinks.Bday_date) -\r\n                        +new Date() -\r\n                        19800000 -\r\n                        86400000 * (dataurl.length - today - 1)\r\n                      }\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <center>\r\n                      {\" \"}\r\n                      {dataurl.length - today - 1 == 0 ? (\r\n                        <h1 className=\"example\">The Big day is here !!!</h1>\r\n                      ) : dataurl.length - today - 1 == 1 ? (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} day to go !!!\r\n                        </h1>\r\n                      ) : (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} days to go !!!\r\n                        </h1>\r\n                      )}\r\n                    </center>\r\n                    <MemoryGame\r\n                      fbimg1={fbimg1}\r\n                      fbimg2={fbimg2}\r\n                      fbimg3={fbimg3}\r\n                      fbimg4={fbimg4}\r\n                      fbimg5={fbimg5}\r\n                      fbimg6={fbimg6}\r\n                      setnewscore={setnewscore}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <footer>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-7 col-md-12 col-sm-12\">\r\n              <p className=\"copyright\">\r\n                Copyright © 2020 Gift's Hub Company . Design:{\" \"}\r\n                <a rel=\"nofollow\" href=\"/\">\r\n                  Gift's Hub\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-12 col-sm-12\">\r\n              <ul className=\"social\">\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-facebook\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-twitter\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-linkedin\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-rss\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">\r\n                    <i className=\"fa fa-dribbble\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { isMobileOnly, isTablet } from \"react-device-detect\";\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 190,\r\n  strokeWidth: 6,\r\n};\r\nconst timerProps1 = {\r\n  isPlaying: true,\r\n  size: 80,\r\n  strokeWidth: 3,\r\n};\r\nconst timerProps2 = {\r\n  isPlaying: true,\r\n  size: 150,\r\n  strokeWidth: 4,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className=\"time\">{time}</div>\r\n      <div>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getTimeSeconds = (time) => (minuteSeconds - time / 1000) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\n\r\nexport default function CircleTimer({ Bday }) {\r\n  const [loading, setloading] = useState(false);\r\n  const startTime = 0;\r\n\r\n  const endTime = Bday / 1000;\r\n  console.log(endTime, \"endtime\");\r\n\r\n  const remainingTime = endTime - startTime;\r\n  console.log(remainingTime, \"endtime_remaining\");\r\n  const days = Math.ceil(remainingTime / daySeconds);\r\n\r\n  const daysDuration = days * daySeconds;\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setloading(false);\r\n  //   }, 2000);\r\n  // });\r\n\r\n  const mobview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps1}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const tabview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps2}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  const browview = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          fontSize: \"35px\",\r\n        }}\r\n      >\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#7E2E84\"]]}\r\n          duration={daysDuration}\r\n          initialRemainingTime={remainingTime}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#00b4c6\"]]}\r\n          duration={daySeconds}\r\n          initialRemainingTime={remainingTime % daySeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > hourSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#fc9700\"]]}\r\n          duration={hourSeconds}\r\n          initialRemainingTime={remainingTime % hourSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > minuteSeconds,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\r\n              \"minutes\",\r\n              getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n            )\r\n          }\r\n        </CountdownCircleTimer>\r\n        <CountdownCircleTimer\r\n          {...timerProps}\r\n          colors={[[\"#218380\"]]}\r\n          duration={minuteSeconds}\r\n          initialRemainingTime={remainingTime % minuteSeconds}\r\n          onComplete={(totalElapsedTime) => [\r\n            remainingTime - totalElapsedTime > 0,\r\n          ]}\r\n        >\r\n          {({ elapsedTime }) =>\r\n            renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n          }\r\n        </CountdownCircleTimer>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ paddingTop: \"20vh\", paddingBottom: \"20vh\" }}>\r\n      {remainingTime > 0 ? (\r\n        <div>\r\n          {isMobileOnly ? mobview() : isTablet ? tabview() : browview()}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nfunction ScheduledLiveNavBar({ slug }) {\r\n  const { daystep } = useSelector((state) => ({ ...state }));\r\n  const database = firebase.firestore();\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database.collection(\"Livelinks\").doc(slug).get();\r\n    const data = await snapshot.data().array_data;\r\n\r\n    data.map((item, index) => {\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/navbar-logo.svg\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              {dataurl.map((item, index) => {\r\n                if (item != \"\") {\r\n                  if (index == daystep.day - 1) {\r\n                    return (\r\n                      <li class=\"nav-item \">\r\n                        <a\r\n                          class=\"nav-link js-scroll-trigger active\"\r\n                          href={item}\r\n                        >\r\n                          Day {index + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <li class=\"nav-item \">\r\n                      <a class=\"nav-link js-scroll-trigger\" href={item}>\r\n                        Day {index + 1}\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveNavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport \"./memory.css\";\r\n\r\nfunction MemoryGame({ fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6 }) {\r\n  const [newGame, setNewGame] = useState(false);\r\n\r\n  const [isstarted, setisstarted] = useState(false);\r\n  const [list, setList] = useState([\r\n    fbimg1,\r\n    fbimg4,\r\n    fbimg3,\r\n    fbimg4,\r\n    fbimg2,\r\n    fbimg1,\r\n    fbimg3,\r\n    fbimg6,\r\n    fbimg6,\r\n    fbimg5,\r\n    fbimg5,\r\n    fbimg2,\r\n  ]);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n\r\n  const [finishedItems, setFinishedItems] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n  const [starttime, setstarttime] = useState(Date.now());\r\n  useEffect(() => {\r\n    setList([\r\n      fbimg1,\r\n      fbimg4,\r\n      fbimg3,\r\n      fbimg4,\r\n      fbimg2,\r\n      fbimg1,\r\n      fbimg3,\r\n      fbimg6,\r\n      fbimg6,\r\n      fbimg5,\r\n      fbimg5,\r\n      fbimg2,\r\n    ]);\r\n  }, [fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6]);\r\n\r\n  const maincontent = () => {\r\n    return <Countdown date={starttime + 5000} renderer={renderer} />;\r\n  };\r\n\r\n  const Completionist = () => {\r\n    return (\r\n      <div>\r\n        {winner && (\r\n          <div>\r\n            {\" \"}\r\n            <div>\r\n              You Win !\r\n              <br />\r\n              Finished in n seconds\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button\r\n          className=\"main-button\"\r\n          onClick={() => {\r\n            setNewGame(!newGame);\r\n            setVisibleItems([]);\r\n            setFinishedItems([]);\r\n            setWinner(false);\r\n            setstarttime(Date.now());\r\n          }}\r\n        >\r\n          New Game\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  const checkItems = (firstIndex, secondIndex) => {\r\n    if (firstIndex !== secondIndex && list[firstIndex] === list[secondIndex]) {\r\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\r\n    } else {\r\n      setTimeout(() => {\r\n        setVisibleItems([]);\r\n      }, 600);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(\r\n      list.sort(() => {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n    maincontent();\r\n  }, [newGame]);\r\n\r\n  useEffect(() => {\r\n    if (finishedItems.length > 0 && finishedItems.length === list.length) {\r\n      {\r\n        setWinner(true);\r\n      }\r\n    }\r\n  }, [finishedItems]);\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      return <Completionist />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <span>\r\n            {hours}:{minutes}:{seconds}\r\n          </span>\r\n          {isstarted ? (\r\n            <div className=\"text-center p-2 d-flex flex-column\">\r\n              {list.length === 0 ? (\r\n                <div>...Loading</div>\r\n              ) : (\r\n                <div>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <div style={{ padding: \"0\" }} className=\"container\">\r\n                    <div className=\"row no-gutters\">\r\n                      {list.map((item, index) => (\r\n                        <div\r\n                          className={`col-3 memcard ${\r\n                            visibleItems.includes(index)\r\n                              ? \"grid-memcard-show\"\r\n                              : \"\"\r\n                          } ${\r\n                            finishedItems.includes(index)\r\n                              ? \"grid-memcard-show grid-memcard-finished\"\r\n                              : \"\"\r\n                          }`}\r\n                          key={item.id}\r\n                          onClick={() => {\r\n                            if (!finishedItems.includes(index)) {\r\n                              switch (visibleItems.length) {\r\n                                case 0:\r\n                                  setVisibleItems([index]);\r\n                                  break;\r\n                                case 1:\r\n                                  if (visibleItems[0] !== index) {\r\n                                    setVisibleItems(visibleItems.concat(index));\r\n                                    checkItems(visibleItems[0], index);\r\n                                  }\r\n                                  break;\r\n                                case 2:\r\n                                  setVisibleItems([index]);\r\n                                  break;\r\n                                default:\r\n                                  setVisibleItems([]);\r\n                              }\r\n                            }\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className={`img-thumbnail img-fluid grid-img`}\r\n                            src={item}\r\n                            alt={item.description}\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <br />\r\n              <br />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <h6 style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                Greetings of the day and wish you many more! Welcome to a fun\r\n                game challenging your wits and hoping to put up a big wide smile\r\n                on your special day.\r\n              </h6>{\" \"}\r\n              <br />\r\n              <h5 style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                Instructions -\r\n              </h5>\r\n              <ol>\r\n                <li>\r\n                  <p style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                    {\" \"}\r\n                    There are 6 pictures behind these 12 tiles and finish this\r\n                    game by matching the two tiles of the same picture together\r\n                  </p>\r\n                </li>\r\n                <li>\r\n                  <p style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                    At a given time only 2 tiles will be shown, so familiarise\r\n                    yourself with where each picture is and finish the game to\r\n                    beat your own personal best!\r\n                  </p>\r\n                </li>\r\n              </ol>\r\n              <br />\r\n              <button\r\n                className=\"main-button\"\r\n                onClick={() => {\r\n                  setisstarted(true);\r\n                  setstarttime(Date.now());\r\n                }}\r\n              >\r\n                Start game\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <div>{maincontent()}</div>;\r\n}\r\n\r\nexport default MemoryGame;\r\n","module.exports = __webpack_public_path__ + \"static/media/navbar-logo.2c061749.svg\";"],"sourceRoot":""}