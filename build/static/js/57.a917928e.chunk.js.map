{"version":3,"sources":["Images/navbar-logo.svg","NavBars/LiveNavBar.js","MemoryGame/MemoryGame.js","LivePages/LiveMemoryGame.js"],"names":["module","exports","LiveNavBar","useState","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","class","id","href","src","require","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MemoryGame","fbimg1","fbimg2","fbimg3","fbimg4","fbimg5","fbimg6","newGame","setNewGame","timer","settimer","isstarted","setisstarted","list","setList","visibleItems","setVisibleItems","duration","setDuration","finishedItems","setFinishedItems","winner","setWinner","sort","Math","random","durationIntervalRef","callback","delay","durationRef","useRef","handler","durationInterval","setInterval","current","clearInterval","useInterval","length","setTimeout","className","style","padding","map","item","index","includes","key","onClick","concat","firstIndex","secondIndex","description","width","color","textAlign","LiveMemoryGamePage","match","setfbimg1","setfbimg2","setfbimg3","setfbimg4","setfbimg5","setfbimg6","loading","setloading","a","firebase","database","ref","params","slug","once","then","snapshot","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","backgroundColor","display","alignItems","flex","height"],"mappings":"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","file":"static/js/57.a917928e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/navbar-logo.2c061749.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nexport default function LiveNavBar() {\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/navbar-logo.svg\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href={`/aboutus`}>\r\n                  ABOUT\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./memory.css\";\r\n\r\nconst useInterval = (callback, delay, duration) => {\r\n  const durationRef = useRef(duration);\r\n  const durationIntervalRef = useRef();\r\n\r\n  const handler = () => {\r\n    callback(durationRef);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const durationInterval = setInterval(handler, delay);\r\n    durationIntervalRef.current = durationInterval;\r\n    return () => {\r\n      clearInterval(durationInterval);\r\n    };\r\n  }, [delay]);\r\n\r\n  return durationIntervalRef;\r\n};\r\n\r\nfunction MemoryGame({ fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6 }) {\r\n  const [newGame, setNewGame] = useState(false);\r\n  const [timer, settimer] = useState(0);\r\n  const [isstarted, setisstarted] = useState(false);\r\n  const [list, setList] = useState([\r\n    fbimg1,\r\n    fbimg4,\r\n    fbimg3,\r\n    fbimg4,\r\n    fbimg2,\r\n    fbimg1,\r\n    fbimg3,\r\n    fbimg6,\r\n    fbimg6,\r\n    fbimg5,\r\n    fbimg5,\r\n    fbimg2,\r\n  ]);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n  const [duration, setDuration] = useState(0);\r\n  const [finishedItems, setFinishedItems] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setList([\r\n      fbimg1,\r\n      fbimg4,\r\n      fbimg3,\r\n      fbimg4,\r\n      fbimg2,\r\n      fbimg1,\r\n      fbimg3,\r\n      fbimg6,\r\n      fbimg6,\r\n      fbimg5,\r\n      fbimg5,\r\n      fbimg2,\r\n    ]);\r\n  }, [fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6]);\r\n\r\n  const checkItems = (firstIndex, secondIndex) => {\r\n    if (firstIndex !== secondIndex && list[firstIndex] === list[secondIndex]) {\r\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\r\n    } else {\r\n      setTimeout(() => {\r\n        setVisibleItems([]);\r\n      }, 600);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(\r\n      list.sort(() => {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  }, [newGame]);\r\n\r\n  const durationIntervalRef = useInterval(\r\n    (durationRef) => {\r\n      durationRef.current++;\r\n      setDuration(durationRef.current);\r\n    },\r\n    1000,\r\n    duration\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (finishedItems.length > 0 && finishedItems.length === list.length) {\r\n      {\r\n        setWinner(true);\r\n      }\r\n\r\n      clearInterval(durationIntervalRef.current);\r\n    }\r\n  }, [finishedItems]);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      settimer(timer + 1);\r\n    }, 1000);\r\n  });\r\n  return (\r\n    <div>\r\n      {/* {timer} */}\r\n      {isstarted ? (\r\n        <div className=\"text-center p-2 d-flex flex-column\">\r\n          {list.length === 0 ? (\r\n            <div>...Loading</div>\r\n          ) : (\r\n            <div>\r\n              <div style={{ padding: \"0\" }} className=\"container\">\r\n                <div className=\"row no-gutters\">\r\n                  {list.map((item, index) => (\r\n                    <div\r\n                      className={`col-3 memcard ${\r\n                        visibleItems.includes(index) ? \"grid-memcard-show\" : \"\"\r\n                      } ${\r\n                        finishedItems.includes(index)\r\n                          ? \"grid-memcard-show grid-memcard-finished\"\r\n                          : \"\"\r\n                      }`}\r\n                      key={item.id}\r\n                      onClick={() => {\r\n                        if (!finishedItems.includes(index)) {\r\n                          switch (visibleItems.length) {\r\n                            case 0:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            case 1:\r\n                              if (visibleItems[0] !== index) {\r\n                                setVisibleItems(visibleItems.concat(index));\r\n                                checkItems(visibleItems[0], index);\r\n                              }\r\n                              break;\r\n                            case 2:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            default:\r\n                              setVisibleItems([]);\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className={`img-thumbnail img-fluid grid-img`}\r\n                        src={item}\r\n                        alt={item.description}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {winner && (\r\n                <div>\r\n                  You Win !\r\n                  <br />\r\n                  {/* Finished in {duration} seconds */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <br />\r\n          <div style={{ width: \"auto\" }}>\r\n            <button\r\n              style={{ width: \"fit-content\" }}\r\n              className=\"main-button\"\r\n              onClick={() => {\r\n                setNewGame(!newGame);\r\n                setVisibleItems([]);\r\n                setFinishedItems([]);\r\n                setWinner(false);\r\n              }}\r\n            >\r\n              New Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2\"></div>{\" \"}\r\n              <div className=\"col-lg-8\">\r\n                <h6 style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                  Greetings of the day and wish you many more! Welcome to a fun\r\n                  game challenging your wits and hoping to put up a big wide\r\n                  smile on your special day.\r\n                </h6>{\" \"}\r\n                <br />\r\n                <h5 style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                  Instructions -\r\n                </h5>\r\n                <ol>\r\n                  <li>\r\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                      {\" \"}\r\n                      There are 6 pictures behind these 12 tiles and finish this\r\n                      game by matching the two tiles of the same picture\r\n                      together\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p style={{ color: \"#000\", textAlign: \"justify\" }}>\r\n                      At a given time only 2 tiles will be shown, so familiarise\r\n                      yourself with where each picture is and finish the game to\r\n                      beat your own personal best!\r\n                    </p>\r\n                  </li>\r\n                </ol>\r\n                <br />\r\n                <center>\r\n                  <button\r\n                    className=\"main-button\"\r\n                    onClick={() => {\r\n                      setisstarted(true);\r\n                      settimer(0);\r\n                    }}\r\n                  >\r\n                    Start game\r\n                  </button>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MemoryGame from \"../MemoryGame/MemoryGame\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport firebase from \"../firebase\";\r\nimport LiveNavBar from \"../NavBars/LiveNavBar\";\r\nexport default function LiveMemoryGamePage({ match }) {\r\n  const [fbimg1, setfbimg1] = useState(\"\");\r\n  const [fbimg2, setfbimg2] = useState(\"\");\r\n  const [fbimg3, setfbimg3] = useState(\"\");\r\n  const [fbimg4, setfbimg4] = useState(\"\");\r\n  const [fbimg5, setfbimg5] = useState(\"\");\r\n  const [fbimg6, setfbimg6] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    setloading(true);\r\n    const todoRef = await firebase\r\n      .database()\r\n      .ref(\"/MemoryGame/\" + match.params.slug)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img1 = snapshot.val().url1;\r\n        setfbimg1(img1);\r\n        var img2 = snapshot.val().url2;\r\n        setfbimg2(img2);\r\n        var img3 = snapshot.val().url3;\r\n        setfbimg3(img3);\r\n        var img4 = snapshot.val().url4;\r\n        setfbimg4(img4);\r\n        var img5 = snapshot.val().url5;\r\n        setfbimg5(img5);\r\n        var img6 = snapshot.val().url6;\r\n        setfbimg6(img6);\r\n      });\r\n    setloading(false);\r\n  }, []);\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\" }}>\r\n      <LiveNavBar />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <div style={{ flex: \"0.1\" }}></div>\r\n        <div className=\"mb-3\" style={{ flex: \"0.8\" }}>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"BallTriangle\"\r\n              color=\"#00BFFF\"\r\n              height={100}\r\n              width={100}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <MemoryGame\r\n                fbimg1={fbimg1}\r\n                fbimg2={fbimg2}\r\n                fbimg3={fbimg3}\r\n                fbimg4={fbimg4}\r\n                fbimg5={fbimg5}\r\n                fbimg6={fbimg6}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}