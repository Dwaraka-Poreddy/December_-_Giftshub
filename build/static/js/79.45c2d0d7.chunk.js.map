{"version":3,"sources":["ScheduledLivePages/ScheduledLiveOpenGreetCard.js","OpenGreetingCard/OpenGreetingCard.js"],"names":["ScheduledLiveOpenGreetCard","match","dispatch","useDispatch","useState","fbimg","setfbimg","message","setmessage","occassion","setoccassion","totext","settotext","fromtext","setfromtext","database","firebase","firestore","Livelinks","setLivelinks","loading","setloading","dataurl","today","settoday","a","collection","doc","params","slug","get","snapshot","data","array_data","map","item","index","id","type","payload","day","url","useEffect","getDoc","console","log","ref","once","then","img","val","msg","occn","to_nam","from_nam","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","style","display","flex","color","height","width","className","Bday","OpenGreetingCard","location","openCard","setOpenCard","timer","class","overflow","backgroundImage","opacity","backgroundSize","backgroundRepeat","boxShadow"],"mappings":"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","file":"static/js/79.45c2d0d7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport OpenGreetingCard from \"../OpenGreetingCard/OpenGreetingCard\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nfunction ScheduledLiveOpenGreetCard({ match }) {\r\n  let dispatch = useDispatch();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [occassion, setoccassion] = useState(\"\");\r\n  const [totext, settotext] = useState(\"\");\r\n  const [fromtext, setfromtext] = useState(\"\");\r\n  const database = firebase.firestore();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"greetingcard\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/OpenGreetingCard/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var msg = snapshot.val().message;\r\n        setmessage(msg);\r\n        var occn = snapshot.val().occassion;\r\n        setoccassion(occn);\r\n        var to_nam = snapshot.val().totext;\r\n        settotext(to_nam);\r\n        var from_nam = snapshot.val().fromtext;\r\n        setfromtext(from_nam);\r\n      });\r\n    setloading(false);\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ flex: \"1\" }}>\r\n          {loading ? (\r\n            <Loader\r\n              type=\"BallTriangle\"\r\n              color=\"#00BFFF\"\r\n              height={100}\r\n              width={100}\r\n            />\r\n          ) : (\r\n            <div>\r\n              {new Date(Livelinks.Bday_date) -\r\n                +new Date() -\r\n                19800000 -\r\n                86400000 * (dataurl.length - today - 1) >\r\n              0 ? (\r\n                <div>\r\n                  <h5 className=\"example\"> This Gift opens in </h5>\r\n                  <CircleTimer\r\n                    Bday={\r\n                      +new Date(Livelinks.Bday_date) -\r\n                      +new Date() -\r\n                      19800000 -\r\n                      86400000 * (dataurl.length - today - 1)\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <center>\r\n                    {\" \"}\r\n                    {dataurl.length - today - 1 == 0 ? (\r\n                      <h1 className=\"example\">The Big day is here !!!</h1>\r\n                    ) : dataurl.length - today - 1 == 1 ? (\r\n                      <h1 className=\"example\">\r\n                        {dataurl.length - today - 1} day to go !!!\r\n                      </h1>\r\n                    ) : (\r\n                      <h1 className=\"example\">\r\n                        {dataurl.length - today - 1} days to go !!!\r\n                      </h1>\r\n                    )}\r\n                  </center>\r\n                  <OpenGreetingCard\r\n                    fbimg={fbimg}\r\n                    message={message}\r\n                    occassion={occassion}\r\n                    totext={totext}\r\n                    fromtext={fromtext}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveOpenGreetCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./OpenGreetingCard.css\";\r\nimport { BrowserView, MobileView, TabletView } from \"react-device-detect\";\r\nexport default function OpenGreetingCard({\r\n  fbimg,\r\n  message,\r\n  occassion,\r\n  totext,\r\n  fromtext,\r\n  location,\r\n}) {\r\n  const [openCard, setOpenCard] = useState(\"gc_carrd \");\r\n\r\n  const timer = () => {\r\n    setTimeout(() => {\r\n      setOpenCard(\"gc_carrd open\");\r\n      setTimeout(() => {\r\n        setOpenCard(\"gc_carrd\");\r\n        timer();\r\n      }, 15000);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    timer();\r\n  });\r\n\r\n  return (\r\n    <div className=\"opengreetingcardmaindiv\">\r\n      <div className=\"gc_mainCard\">\r\n        <section class=\"gc_containerr\">\r\n          <div className={openCard} id=\"theCard\">\r\n            <div class=\"gc_page gc_back\">\r\n              <div class=\"side gc_back\">Jobbies</div>\r\n              <div class=\"side gc_front\">\r\n                <div class=\"gc_hearts\">\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                  <div class=\"gc_heart\"></div>\r\n                </div>\r\n                <div style={{ overflow: \"hidden\" }}>\r\n                  <p>{message}</p>\r\n                  <p> {occassion}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"gc_page gc_front\">\r\n              <div\r\n                style={{\r\n                  backgroundImage: \"url(\" + fbimg + \")\",\r\n                  opacity: \"0.9\",\r\n                  backgroundSize: \"cover\",\r\n                  backgroundRepeat: \"no-repeat\",\r\n                  overflow: \"hidden\",\r\n                  boxShadow: \"0px 0px 0px 15px #dfccaf inset\",\r\n                }}\r\n                class=\"side gc_back red\"\r\n              >\r\n                <div class=\"gc_hearts\">\r\n                  {\" \"}\r\n                  <BrowserView>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>{\" \"}\r\n                  </BrowserView>\r\n                  <TabletView>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>\r\n                    <div class=\"gc_heart\"></div>{\" \"}\r\n                  </TabletView>\r\n                </div>{\" \"}\r\n              </div>\r\n              <div style={{ overflow: \"hidden\" }} class=\"side gc_front\">\r\n                <div>\r\n                  <p>\r\n                    To <br /> <span class=\"red\"> {totext}</span>\r\n                  </p>\r\n                  <p>\r\n                    From <br /> <span class=\"blue\">{fromtext}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}