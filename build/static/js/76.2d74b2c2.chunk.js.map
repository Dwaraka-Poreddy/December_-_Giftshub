{"version":3,"sources":["ScheduledLivePages/ScheduledLiveMemoryGame.js","MemoryGame/MemoryGame.js"],"names":["ScheduledLiveMemoryGame","match","database","firebase","firestore","dispatch","useDispatch","useState","Livelinks","setLivelinks","fbimg1","setfbimg1","fbimg2","setfbimg2","fbimg3","setfbimg3","fbimg4","setfbimg4","fbimg5","setfbimg5","fbimg6","setfbimg6","loading","setloading","dataurl","today","settoday","nscore","setnscore","bestscore","setbestscore","handleFireBaseScoreUpload","n","todo","score","ref","params","id","update","setnewscore","e","a","alert","getDoc","collection","doc","slug","get","snapshot","data","array_data","map","item","index","type","payload","day","url","useEffect","console","log","once","then","img1","val","url1","img2","url2","img3","url3","img4","url4","img5","url5","img6","url6","scr","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","style","backgroundColor","class","color","height","width","className","Bday","MemoryGame","newGame","setNewGame","timer","settimer","isstarted","setisstarted","list","setList","visibleItems","setVisibleItems","duration","setDuration","finishedItems","setFinishedItems","winner","setWinner","sort","random","durationIntervalRef","callback","delay","durationRef","useRef","handler","durationInterval","setInterval","current","clearInterval","useInterval","padding","includes","key","onClick","concat","firstIndex","secondIndex","src","alt","description","textAlign"],"mappings":"sSAOe,SAASA,GAAwB,MAAEC,IAChD,IAAMC,EAAWC,IAASC,YACtBC,EAAWC,cAF0C,EAGvBC,mBAAS,IAHc,mBAGlDC,EAHkD,KAGvCC,EAHuC,OAI7BF,mBAAS,IAJoB,mBAIlDG,EAJkD,KAI1CC,EAJ0C,OAK7BJ,mBAAS,IALoB,mBAKlDK,EALkD,KAK1CC,EAL0C,OAM7BN,mBAAS,IANoB,mBAMlDO,EANkD,KAM1CC,EAN0C,OAO7BR,mBAAS,IAPoB,mBAOlDS,EAPkD,KAO1CC,EAP0C,OAQ7BV,mBAAS,IARoB,mBAQlDW,EARkD,KAQ1CC,EAR0C,OAS7BZ,mBAAS,IAToB,mBASlDa,EATkD,KAS1CC,EAT0C,OAU3Bd,oBAAS,GAVkB,mBAUlDe,EAVkD,KAUzCC,EAVyC,OAW3BhB,mBAAS,IAXkB,mBAWlDiB,EAXkD,aAY/BjB,sBAZ+B,mBAYlDkB,EAZkD,KAY3CC,EAZ2C,OAa7BnB,mBAAS,GAboB,oBAalDoB,GAbkD,MAa1CC,GAb0C,SAcvBrB,mBAAS,IAdc,qBAclDsB,GAdkD,MAcvCC,GAduC,MAenDC,GAA6BC,IACjC,IACMC,EAAO,CACXC,MAAOF,GAFO7B,IAASD,WAAWiC,IAAI,cAAgBlC,EAAMmC,OAAOC,IAI7DC,OAAOL,IAEXM,GAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAClBb,GAAUY,GACNb,GAASE,KACXa,MAAM,0DACNZ,GAAaH,IACbI,GAA0BS,IALV,2CAAH,sDAtBwC,SA8B1CG,KA9B0C,8EA8BzD,8BAAAF,EAAA,sEACyBvC,EACpB0C,WAAW,aACXC,IAAI5C,EAAMmC,OAAOU,MACjBC,MAJL,OACQC,EADR,OAKQC,EAAOD,EAASC,OACtBxC,EAAawC,GACbA,EAAKC,WAAWC,IAAI,CAACC,EAAMC,KACV,cAAXD,EAAKf,KACPX,EAAS2B,GACThD,EAAS,CACPiD,KAAM,cACNC,QAAS,CAAEC,IAAKH,EAAQ,MAG5B7B,EAAQ6B,GAASD,EAAKK,MAf1B,4CA9ByD,sBAgDzDC,oBAAS,sBAAC,sBAAAjB,EAAA,sEACFE,KADE,OAERgB,QAAQC,IAAIpD,EAAW,YACvBmD,QAAQC,IAAI3D,EAAMmC,OAAOU,KAAM,OAAQ7C,EAAMmC,OAAOC,GAAI,MAHhD,2CAIP,IAEHqB,oBAAU,KACRnC,GAAW,GACKpB,IACbD,WACAiC,IAAI,eAAiBlC,EAAMmC,OAAOC,IAClCwB,KAAK,SACLC,KAAMd,IACL,IAAIe,EAAOf,EAASgB,MAAMC,KAC1BtD,EAAUoD,GACV,IAAIG,EAAOlB,EAASgB,MAAMG,KAC1BtD,EAAUqD,GACV,IAAIE,EAAOpB,EAASgB,MAAMK,KAC1BtD,EAAUqD,GACV,IAAIE,EAAOtB,EAASgB,MAAMO,KAC1BtD,EAAUqD,GACV,IAAIE,EAAOxB,EAASgB,MAAMS,KAC1BtD,EAAUqD,GACV,IAAIE,EAAO1B,EAASgB,MAAMW,KAC1BtD,EAAUqD,GACV,IAAIE,EAAM5B,EAASgB,MAAM9B,MACzBJ,GAAa8C,GACbrD,GAAW,MAEd,IACH,IAAMsD,GAAoB,MACb,IAAIC,MAAOC,cAAtB,IACIC,GACD,IAAIF,KAAKtE,EAAUyE,YACnB,IAAIH,KACL,MACA,OAAYtD,EAAQ0D,OAASzD,GAE3B0D,EAAW,GAWf,OATIH,EAAa,IACfG,EAAW,CACTC,KAAMC,KAAKC,MAAMN,EAAU,OAC3BO,MAAOF,KAAKC,MAAON,EAAU,KAAuB,IACpDQ,QAASH,KAAKC,MAAON,EAAa,IAAO,GAAM,IAC/CS,QAASJ,KAAKC,MAAON,EAAa,IAAQ,MAIvCG,GAjGgD,GAoGzB5E,mBAASsE,MApGgB,qBAoGlDM,GApGkD,MAoGxCO,GApGwC,MAsGzDhC,oBAAU,KACRiC,WAAW,KACTD,GAAYb,OACX,OAEL,IAAMe,GAAkB,GAcxB,OAZAC,OAAOC,KAAKX,IAAUY,QAASC,IACxBb,GAASa,IAIdJ,GAAgBK,KACd,8BACGd,GAASa,GADZ,IACwBA,EAAU,QAMpC,yBAAKE,MAAO,CAAEC,gBAAiB,YAC7B,kBAAC,IAAD,CAAqBrD,KAAM7C,EAAMmC,OAAOU,OACxC,6BACA,6BACA,6BACA,6BACA,yBAAKoD,MAAO,CAAEC,gBAAiB,WAAaC,MAAM,wBAChD,yBAAKA,MAAM,OACT,yBAAKA,MAAM,cACX,yBAAKA,MAAM,kBACR9E,EACC,kBAAC,IAAD,CACEgC,KAAK,eACL+C,MAAM,UACNC,OAAQ,IACRC,MAAO,MAGT,6BACG,IAAIzB,KAAKtE,EAAUyE,YACjB,IAAIH,KACL,MACA,OAAYtD,EAAQ0D,OAASzD,EAAQ,GACvC,EACE,6BACE,wBAAI+E,UAAU,WAAd,wBACA,kBAAC,IAAD,CACEC,MACG,IAAI3B,KAAKtE,EAAUyE,YACnB,IAAIH,KACL,MACA,OAAYtD,EAAQ0D,OAASzD,EAAQ,MAK3C,6BACE,gCACG,IACAD,EAAQ0D,OAASzD,EAAQ,GAAK,EAC7B,wBAAI+E,UAAU,WAAd,2BACEhF,EAAQ0D,OAASzD,EAAQ,GAAK,EAChC,wBAAI+E,UAAU,WACXhF,EAAQ0D,OAASzD,EAAQ,EAD5B,kBAIA,wBAAI+E,UAAU,WACXhF,EAAQ0D,OAASzD,EAAQ,EAD5B,oBAKJ,kBAAC,IAAD,CACEf,OAAQA,EACRE,OAAQA,EACRE,OAAQA,EACRE,OAAQA,EACRE,OAAQA,EACRE,OAAQA,EACRmB,YAAaA,QAMlB,IACP,yBAAK6D,MAAM,mB,oECwCNM,IAnNf,UAAoB,OAAEhG,EAAF,OAAUE,EAAV,OAAkBE,EAAlB,OAA0BE,EAA1B,OAAkCE,EAAlC,OAA0CE,IAAW,IAAD,EACxCb,oBAAS,GAD+B,mBAC/DoG,EAD+D,KACtDC,EADsD,OAE5CrG,mBAAS,GAFmC,mBAE/DsG,EAF+D,KAExDC,EAFwD,OAGpCvG,oBAAS,GAH2B,mBAG/DwG,EAH+D,KAGpDC,EAHoD,OAI9CzG,mBAAS,CAC/BG,EACAM,EACAF,EACAE,EACAJ,EACAF,EACAI,EACAM,EACAA,EACAF,EACAA,EACAN,IAhBoE,mBAI/DqG,EAJ+D,KAIzDC,EAJyD,OAkB9B3G,mBAAS,IAlBqB,mBAkB/D4G,EAlB+D,KAkBjDC,EAlBiD,OAmBtC7G,mBAAS,GAnB6B,mBAmB/D8G,EAnB+D,KAmBrDC,EAnBqD,OAoB5B/G,mBAAS,IApBmB,mBAoB/DgH,EApB+D,KAoBhDC,EApBgD,OAqB1CjH,oBAAS,GArBiC,mBAqB/DkH,EArB+D,KAqBvDC,EArBuD,KAuBtEhE,oBAAU,KACRwD,EAAQ,CACNxG,EACAM,EACAF,EACAE,EACAJ,EACAF,EACAI,EACAM,EACAA,EACAF,EACAA,EACAN,KAED,CAACF,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,IAY5CsC,oBAAU,KACRwD,EACED,EAAKU,KAAK,IACD,GAAMtC,KAAKuC,YAGrB,CAACjB,IAEJ,IAAMkB,EA7EY,EAACC,EAAUC,EAAOV,KACpC,IAAMW,EAAcC,iBAAOZ,GACrBQ,EAAsBI,mBAEtBC,EAAU,KACdJ,EAASE,IAWX,OARAtE,oBAAU,KACR,IAAMyE,EAAmBC,YAAYF,EAASH,GAE9C,OADAF,EAAoBQ,QAAUF,EACvB,KACLG,cAAcH,KAEf,CAACJ,IAEGF,GA6DqBU,CACzBP,IACCA,EAAYK,UACZf,EAAYU,EAAYK,UAE1B,IACAhB,GAiBF,OAdA3D,oBAAU,KACJ6D,EAAcrC,OAAS,GAAKqC,EAAcrC,SAAW+B,EAAK/B,SAE1DwC,GAAU,GAGZY,cAAcT,EAAoBQ,WAEnC,CAACd,IACJ7D,oBAAU,KACRiC,WAAW,KACTmB,EAASD,EAAQ,IAChB,OAGH,6BAEGE,EACC,yBAAKP,UAAU,sCACI,IAAhBS,EAAK/B,OACJ,2CAEA,6BACE,yBAAKgB,MAAO,CAAEsC,QAAS,KAAOhC,UAAU,aACtC,yBAAKA,UAAU,kBACZS,EAAK9D,IAAI,CAACC,EAAMC,IACf,yBACEmD,UAAS,wBACPW,EAAasB,SAASpF,GAAS,oBAAsB,GAD9C,YAGPkE,EAAckB,SAASpF,GACnB,0CACA,IAENqF,IAAKtF,EAAKf,GACVsG,QAAS,KACP,IAAKpB,EAAckB,SAASpF,GAC1B,OAAQ8D,EAAajC,QACnB,KAAK,EACHkC,EAAgB,CAAC/D,IACjB,MACF,KAAK,EACC8D,EAAa,KAAO9D,IACtB+D,EAAgBD,EAAayB,OAAOvF,KAtE9CwF,EAuEqB1B,EAAa,OAvEtB2B,EAuE0BzF,IAtEtB4D,EAAK4B,KAAgB5B,EAAK6B,GAC1DtB,EAAiB,IAAID,EAAesB,EAAYC,IAEhDnD,WAAW,KACTyB,EAAgB,KACf,MAmEqB,MACF,KAAK,EACHA,EAAgB,CAAC/D,IACjB,MACF,QACE+D,EAAgB,IA9EzB,IAACyB,EAAYC,IAmFZ,yBACEtC,UAAS,mCACTuC,IAAK3F,EACL4F,IAAK5F,EAAK6F,kBAOnBxB,GACC,yCAEE,6BAFF,eAGeJ,EAHf,aAQN,6BACA,yBAAKnB,MAAO,CAAEK,MAAO,SACnB,4BACEL,MAAO,CAAEK,MAAO,eAChBC,UAAU,cACVmC,QAAS,KACP/B,GAAYD,GACZS,EAAgB,IAChBI,EAAiB,IACjBE,GAAU,KAPd,cAeJ,6BACE,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aAAkB,IACjC,yBAAKA,UAAU,YACb,wBAAIN,MAAO,CAAEG,MAAO,UAAW6C,UAAW,YAA1C,uJAIM,IACN,6BACA,wBAAIhD,MAAO,CAAEG,MAAO,UAAW6C,UAAW,YAA1C,kBAGA,4BACE,4BACE,uBAAGhD,MAAO,CAAEG,MAAO,UAAW6C,UAAW,YACtC,IADH,2HAOF,4BACE,uBAAGhD,MAAO,CAAEG,MAAO,UAAW6C,UAAW,YAAzC,wJAOJ,6BACA,gCACE,4BACE1C,UAAU,cACVmC,QAAS,KACP3B,GAAa,GACbF,EAAS,KAJb,sB","file":"static/js/76.2d74b2c2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MemoryGame from \"../MemoryGame/MemoryGame\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveMemoryGame({ match }) {\r\n  const database = firebase.firestore();\r\n  let dispatch = useDispatch();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [fbimg1, setfbimg1] = useState(\"\");\r\n  const [fbimg2, setfbimg2] = useState(\"\");\r\n  const [fbimg3, setfbimg3] = useState(\"\");\r\n  const [fbimg4, setfbimg4] = useState(\"\");\r\n  const [fbimg5, setfbimg5] = useState(\"\");\r\n  const [fbimg6, setfbimg6] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  const [nscore, setnscore] = useState(0);\r\n  const [bestscore, setbestscore] = useState(\"\");\r\n  const handleFireBaseScoreUpload = (n) => {\r\n    const todoRef = firebase.database().ref(\"MemoryGame/\" + match.params.id);\r\n    const todo = {\r\n      score: n,\r\n    };\r\n    todoRef.update(todo);\r\n  };\r\n  const setnewscore = async (e) => {\r\n    setnscore(e);\r\n    if (nscore < bestscore) {\r\n      alert(\"you scored better than your previous one! keep playing\");\r\n      setbestscore(nscore);\r\n      handleFireBaseScoreUpload(e);\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"memorygame\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/MemoryGame/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img1 = snapshot.val().url1;\r\n        setfbimg1(img1);\r\n        var img2 = snapshot.val().url2;\r\n        setfbimg2(img2);\r\n        var img3 = snapshot.val().url3;\r\n        setfbimg3(img3);\r\n        var img4 = snapshot.val().url4;\r\n        setfbimg4(img4);\r\n        var img5 = snapshot.val().url5;\r\n        setfbimg5(img5);\r\n        var img6 = snapshot.val().url6;\r\n        setfbimg6(img6);\r\n        var scr = snapshot.val().score;\r\n        setbestscore(scr);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    // console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }} class=\"container-fluid pt-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-1 \"></div>\r\n          <div class=\"col-sm-10 mb-3\">\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {new Date(Livelinks.Bday_date) -\r\n                  +new Date() -\r\n                  19800000 -\r\n                  86400000 * (dataurl.length - today - 1) >\r\n                0 ? (\r\n                  <div>\r\n                    <h5 className=\"example\"> This Gift opens in </h5>\r\n                    <CircleTimer\r\n                      Bday={\r\n                        +new Date(Livelinks.Bday_date) -\r\n                        +new Date() -\r\n                        19800000 -\r\n                        86400000 * (dataurl.length - today - 1)\r\n                      }\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <center>\r\n                      {\" \"}\r\n                      {dataurl.length - today - 1 == 0 ? (\r\n                        <h1 className=\"example\">The Big day is here !!!</h1>\r\n                      ) : dataurl.length - today - 1 == 1 ? (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} day to go !!!\r\n                        </h1>\r\n                      ) : (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} days to go !!!\r\n                        </h1>\r\n                      )}\r\n                    </center>\r\n                    <MemoryGame\r\n                      fbimg1={fbimg1}\r\n                      fbimg2={fbimg2}\r\n                      fbimg3={fbimg3}\r\n                      fbimg4={fbimg4}\r\n                      fbimg5={fbimg5}\r\n                      fbimg6={fbimg6}\r\n                      setnewscore={setnewscore}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>{\" \"}\r\n          <div class=\"col-sm-1 \"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./memory.css\";\r\n\r\nconst useInterval = (callback, delay, duration) => {\r\n  const durationRef = useRef(duration);\r\n  const durationIntervalRef = useRef();\r\n\r\n  const handler = () => {\r\n    callback(durationRef);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const durationInterval = setInterval(handler, delay);\r\n    durationIntervalRef.current = durationInterval;\r\n    return () => {\r\n      clearInterval(durationInterval);\r\n    };\r\n  }, [delay]);\r\n\r\n  return durationIntervalRef;\r\n};\r\n\r\nfunction MemoryGame({ fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6 }) {\r\n  const [newGame, setNewGame] = useState(false);\r\n  const [timer, settimer] = useState(0);\r\n  const [isstarted, setisstarted] = useState(false);\r\n  const [list, setList] = useState([\r\n    fbimg1,\r\n    fbimg4,\r\n    fbimg3,\r\n    fbimg4,\r\n    fbimg2,\r\n    fbimg1,\r\n    fbimg3,\r\n    fbimg6,\r\n    fbimg6,\r\n    fbimg5,\r\n    fbimg5,\r\n    fbimg2,\r\n  ]);\r\n  const [visibleItems, setVisibleItems] = useState([]);\r\n  const [duration, setDuration] = useState(0);\r\n  const [finishedItems, setFinishedItems] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setList([\r\n      fbimg1,\r\n      fbimg4,\r\n      fbimg3,\r\n      fbimg4,\r\n      fbimg2,\r\n      fbimg1,\r\n      fbimg3,\r\n      fbimg6,\r\n      fbimg6,\r\n      fbimg5,\r\n      fbimg5,\r\n      fbimg2,\r\n    ]);\r\n  }, [fbimg1, fbimg2, fbimg3, fbimg4, fbimg5, fbimg6]);\r\n\r\n  const checkItems = (firstIndex, secondIndex) => {\r\n    if (firstIndex !== secondIndex && list[firstIndex] === list[secondIndex]) {\r\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\r\n    } else {\r\n      setTimeout(() => {\r\n        setVisibleItems([]);\r\n      }, 600);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(\r\n      list.sort(() => {\r\n        return 0.5 - Math.random();\r\n      })\r\n    );\r\n  }, [newGame]);\r\n\r\n  const durationIntervalRef = useInterval(\r\n    (durationRef) => {\r\n      durationRef.current++;\r\n      setDuration(durationRef.current);\r\n    },\r\n    1000,\r\n    duration\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (finishedItems.length > 0 && finishedItems.length === list.length) {\r\n      {\r\n        setWinner(true);\r\n      }\r\n\r\n      clearInterval(durationIntervalRef.current);\r\n    }\r\n  }, [finishedItems]);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      settimer(timer + 1);\r\n    }, 1000);\r\n  });\r\n  return (\r\n    <div>\r\n      {/* {timer} */}\r\n      {isstarted ? (\r\n        <div className=\"text-center p-2 d-flex flex-column\">\r\n          {list.length === 0 ? (\r\n            <div>...Loading</div>\r\n          ) : (\r\n            <div>\r\n              <div style={{ padding: \"0\" }} className=\"container\">\r\n                <div className=\"row no-gutters\">\r\n                  {list.map((item, index) => (\r\n                    <div\r\n                      className={`col-3 memcard ${\r\n                        visibleItems.includes(index) ? \"grid-memcard-show\" : \"\"\r\n                      } ${\r\n                        finishedItems.includes(index)\r\n                          ? \"grid-memcard-show grid-memcard-finished\"\r\n                          : \"\"\r\n                      }`}\r\n                      key={item.id}\r\n                      onClick={() => {\r\n                        if (!finishedItems.includes(index)) {\r\n                          switch (visibleItems.length) {\r\n                            case 0:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            case 1:\r\n                              if (visibleItems[0] !== index) {\r\n                                setVisibleItems(visibleItems.concat(index));\r\n                                checkItems(visibleItems[0], index);\r\n                              }\r\n                              break;\r\n                            case 2:\r\n                              setVisibleItems([index]);\r\n                              break;\r\n                            default:\r\n                              setVisibleItems([]);\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className={`img-thumbnail img-fluid grid-img`}\r\n                        src={item}\r\n                        alt={item.description}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {winner && (\r\n                <div>\r\n                  You Win !\r\n                  <br />\r\n                  Finished in {duration} seconds\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <br />\r\n          <div style={{ width: \"auto\" }}>\r\n            <button\r\n              style={{ width: \"fit-content\" }}\r\n              className=\"main-button\"\r\n              onClick={() => {\r\n                setNewGame(!newGame);\r\n                setVisibleItems([]);\r\n                setFinishedItems([]);\r\n                setWinner(false);\r\n              }}\r\n            >\r\n              New Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2\"></div>{\" \"}\r\n              <div className=\"col-lg-8\">\r\n                <h6 style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                  Greetings of the day and wish you many more! Welcome to a fun\r\n                  game challenging your wits and hoping to put up a big wide\r\n                  smile on your special day.\r\n                </h6>{\" \"}\r\n                <br />\r\n                <h5 style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                  Instructions -\r\n                </h5>\r\n                <ol>\r\n                  <li>\r\n                    <p style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                      {\" \"}\r\n                      There are 6 pictures behind these 12 tiles and finish this\r\n                      game by matching the two tiles of the same picture\r\n                      together\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p style={{ color: \"#ffffff\", textAlign: \"justify\" }}>\r\n                      At a given time only 2 tiles will be shown, so familiarise\r\n                      yourself with where each picture is and finish the game to\r\n                      beat your own personal best!\r\n                    </p>\r\n                  </li>\r\n                </ol>\r\n                <br />\r\n                <center>\r\n                  <button\r\n                    className=\"main-button\"\r\n                    onClick={() => {\r\n                      setisstarted(true);\r\n                      settimer(0);\r\n                    }}\r\n                  >\r\n                    Start game\r\n                  </button>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGame;\r\n"],"sourceRoot":""}