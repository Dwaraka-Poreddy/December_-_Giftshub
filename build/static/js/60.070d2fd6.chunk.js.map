{"version":3,"sources":["Images/navbar-logo.svg","NavBars/LiveNavBar.js","SplitWallImage/SplitWallImage.js","LivePages/LiveSplitWall.js"],"names":["module","exports","LiveNavBar","useState","navstate","setnavstate","useEffect","window","addEventListener","changeBackground","scrollY","class","id","href","src","require","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SplitWallImage","fbimg","style","width","margin","lineHeight","position","marginTop","top","backgroundColor","display","gridTemplateColumns","gridGap","mixBlendMode","background","height","gridColumn","LiveSplitWall","match","setfbimg","loading","setloading","a","firebase","database","ref","params","slug","once","then","snapshot","img","val","url","flex","color"],"mappings":"8IAAAA,EAAOC,QAAU,IAA0B,yC,6GCG5B,SAASC,IAAc,IAAD,EACHC,oBAAS,GADN,mBAC5BC,EAD4B,KAClBC,EADkB,KAEnCC,oBAAU,KACRC,OAAOC,iBAAiB,SAAUC,IACjC,IACH,IAAMA,EAAmB,KACnBF,OAAOG,SAAW,IACpBL,GAAY,GAEZA,GAAY,IAGhB,OACE,6BACE,yBACEM,MACGP,EAEG,8DADA,gDAGNQ,GAAG,WAEH,yBAAKD,MAAM,aACT,uBAAGA,MAAM,iCAAiCE,KAAI,KAC5C,yBAAKC,IAAKC,EAAQ,KAA8BC,IAAI,MAEtD,4BACEL,MAAM,sCACNM,KAAK,SACLC,cAAY,WACZC,cAAY,oBACZC,gBAAc,mBACdC,gBAAc,QACdC,aAAW,qBAPb,OAUE,uBAAGX,MAAM,sBAEX,yBAAKA,MAAM,2BAA2BC,GAAG,oBACvC,wBAAID,MAAM,qCACR,wBAAIA,MAAM,YACR,uBAAGA,MAAM,6BAA6BE,KAAI,YAA1C,iB,iCC5ChB,sDAEe,SAASU,GAAe,MAAEC,IACvC,OACE,6BACE,6BACEC,MAAO,CACLC,MAAO,MACPC,OAAQ,SACRC,WAAY,IACZC,SAAU,aAGZ,yBAAKJ,MAAO,CAAEC,MAAO,MAAOI,UAAW,OAAShB,IAAKU,EAAOR,IAAI,KAChE,6BACES,MAAO,CACLI,SAAU,WACVE,IAAK,IACLL,MAAO,OACPM,gBAAiB,UACjBC,QAAS,OACTC,oBAAqB,cACrBC,QAAS,OACTC,aAAc,YAGhB,yBAAKX,MAAO,CAAEY,WAAY,QAASC,OAAQ,UAC3C,yBACEb,MAAO,CAAEY,WAAY,QAASC,OAAQ,OAAQC,WAAY,SAE5D,yBAAKd,MAAO,CAAEY,WAAY,QAASC,OAAQ,UAC3C,yBAAKb,MAAO,CAAEY,WAAY,QAASC,OAAQ,UAC3C,yBAAKb,MAAO,CAAEY,WAAY,QAASC,OAAQ,e,gLC1BtC,SAASE,GAAc,MAAEC,IAAU,IAAD,EACrBtC,mBAAS,IADY,mBACxCqB,EADwC,KACjCkB,EADiC,OAEjBvC,oBAAS,GAFQ,mBAExCwC,EAFwC,KAE/BC,EAF+B,KAc/C,OAXAtC,oBAAS,sBAAC,sBAAAuC,EAAA,6DACRD,GAAW,GADH,SAEcE,IACnBC,WACAC,IAAI,cAAgBP,EAAMQ,OAAOC,MACjCC,KAAK,SACLC,KAAMC,IACL,IAAIC,EAAMD,EAASE,MAAMC,IACzBd,EAASY,KARL,yDAUP,IAED,yBAAK7B,MAAO,CAAEO,gBAAiB,UAAWM,OAAQ,UAChD,kBAAC,IAAD,MACA,6BACA,6BACA,yBAAKb,MAAO,CAAEO,gBAAiB,YAC7B,yBAAKP,MAAO,CAAEQ,QAAS,SACrB,yBAAKR,MAAO,CAAEgC,KAAM,UACpB,yBAAKhC,MAAO,CAAEgC,KAAM,QACjBd,EACC,kBAAC,IAAD,CACE1B,KAAK,eACLyC,MAAM,UACNpB,OAAQ,IACRZ,MAAO,MAGT,kBAAC,IAAD,CAAgBF,MAAOA,KAG3B,yBAAKC,MAAO,CAAEgC,KAAM","file":"static/js/60.070d2fd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/navbar-logo.2c061749.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nexport default function LiveNavBar() {\r\n  const [navstate, setnavstate] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBackground);\r\n  }, []);\r\n  const changeBackground = () => {\r\n    if (window.scrollY >= 100) {\r\n      setnavstate(true);\r\n    } else {\r\n      setnavstate(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <nav\r\n        class={\r\n          !navstate\r\n            ? \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n            : \"navbar navbar-expand-lg navbar-dark fixed-top navbar-shrink\"\r\n        }\r\n        id=\"mainNav\"\r\n      >\r\n        <div class=\"container\">\r\n          <a class=\"navbar-brand js-scroll-trigger\" href={`/`}>\r\n            <img src={require(\"../Images/navbar-logo.svg\")} alt=\"\" />\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler navbar-toggler-right\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            Menu\r\n            <i class=\"fas fa-bars ml-1\"></i>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul class=\"navbar-nav text-uppercase ml-auto\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link js-scroll-trigger\" href={`/aboutus`}>\r\n                  ABOUT\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SplitWallImage({ fbimg }) {\r\n  return (\r\n    <div>\r\n      <section\r\n        style={{\r\n          width: \"80%\",\r\n          margin: \"0 auto\",\r\n          lineHeight: \"0\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <img style={{ width: \"70%\", marginTop: \"10%\" }} src={fbimg} alt=\"\" />\r\n        <article\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            width: \"100%\",\r\n            backgroundColor: \"#ffffff\",\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 1fr 1fr\",\r\n            gridGap: \"20px\",\r\n            mixBlendMode: \"lighten\"\r\n          }}\r\n        >\r\n          <div style={{ background: \"black\", height: \"24vw\" }}></div>\r\n          <div\r\n            style={{ background: \"black\", height: \"24vw\", gridColumn: \"2/4\" }}\r\n          ></div>\r\n          <div style={{ background: \"black\", height: \"24vw\" }}></div>\r\n          <div style={{ background: \"black\", height: \"24vw\" }}></div>\r\n          <div style={{ background: \"black\", height: \"24vw\" }}></div>\r\n        </article>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SplitWallImage from \"../SplitWallImage/SplitWallImage\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport firebase from \"../firebase\";\r\nimport LiveNavBar from \"../NavBars/LiveNavBar\";\r\n\r\nexport default function LiveSplitWall({ match }) {\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  useEffect(async () => {\r\n    setloading(true);\r\n    const todoRef = await firebase\r\n      .database()\r\n      .ref(\"/SplitWall/\" + match.params.slug)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\", height: \"100vh\" }}>\r\n      <LiveNavBar />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ flex: \"0.15\" }}></div>\r\n          <div style={{ flex: \"0.7\" }}>\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <SplitWallImage fbimg={fbimg} />\r\n            )}\r\n          </div>\r\n          <div style={{ flex: \"0.15\" }}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}