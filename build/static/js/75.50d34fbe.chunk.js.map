{"version":3,"sources":["ScheduledLivePages/ScheduledLiveSlidePuzzle.js"],"names":["ScheduledLiveSlidePuzzle","match","dispatch","useDispatch","useState","fbimg","setfbimg","database","firebase","firestore","Livelinks","setLivelinks","loading","setloading","dataurl","today","settoday","bestscore","setbestscore","setpuzzlescore","a","collection","doc","params","slug","get","snapshot","data","array_data","map","item","index","id","type","payload","day","url","useEffect","getDoc","ref","once","then","img","val","best_score","Date","getFullYear","difference","Bday_date","length","console","log","timeLeft","days","Math","floor","hours","minutes","seconds","calculateTimeLeft","timerComponents","Object","keys","forEach","interval","push","style","backgroundColor","class","color","height","width","className","Bday","display","justifyContent","margin","handlepuzzlescore","e","todoRef","child","todo","update","toast","success","alignItems"],"mappings":"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","file":"static/js/75.50d34fbe.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SlidePuzzle from \"../SlidePuzzle/SlidePuzzle\";\r\nimport SlidePuzzleAnswer from \"../SlidePuzzle/SlidePuzzleAnswer\";\r\nimport firebase from \"../firebase\";\r\nimport \"./ScheduledLiveSlidePuzzle.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nimport { toast } from \"react-toastify\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nfunction ScheduledLiveSlidePuzzle({ match }) {\r\n  let dispatch = useDispatch();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const database = firebase.firestore();\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(false);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n  const [bestscore, setbestscore] = useState();\r\n  const [puzzlescore, setpuzzlescore] = useState(0);\r\n  const handlepuzzlescore = (e) => {\r\n    setpuzzlescore(e);\r\n    if (e < bestscore) {\r\n      const todoRef = firebase\r\n        .database()\r\n        .ref(\"SlidePuzzle\")\r\n        .child(match.params.id);\r\n      const todo = {\r\n        url: fbimg,\r\n        best_score: e,\r\n      };\r\n      var newKey = todoRef.update(todo);\r\n      setbestscore(e);\r\n      toast.success(\"You bet your previous best score, Keep playing!\");\r\n    }\r\n  };\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"puzzle\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getDoc();\r\n  }, []);\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/SlidePuzzle/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var bestscore = snapshot.val().best_score;\r\n        setbestscore(bestscore);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     setTimeLeft(calculateTimeLeft());\r\n  //   }, 1000);\r\n  // });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#ffffff\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n\r\n      <div class=\"container-fluid pt-3\">\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {new Date(Livelinks.Bday_date) -\r\n                  +new Date() -\r\n                  19800000 -\r\n                  86400000 * (dataurl.length - today) >\r\n                0 ? (\r\n                  <div>\r\n                    <h5 className=\"example\"> This Gift opens in </h5>\r\n                    <CircleTimer\r\n                      Bday={\r\n                        +new Date(Livelinks.Bday_date) -\r\n                        +new Date() -\r\n                        19800000 -\r\n                        86400000 * (dataurl.length - today - 1)\r\n                      }\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <center>\r\n                      {\" \"}\r\n                      {dataurl.length - today - 1 == 0 ? (\r\n                        <h1 className=\"example\">The Big day is here !!!</h1>\r\n                      ) : dataurl.length - today - 1 == 1 ? (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} day to go !!!\r\n                        </h1>\r\n                      ) : (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} days to go !!!\r\n                        </h1>\r\n                      )}\r\n                    </center>\r\n                    <center>\r\n                      {bestscore != 100000 && (\r\n                        <center>\r\n                          <h2>Best Score: {bestscore}</h2>\r\n                        </center>\r\n                      )}\r\n                    </center>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-lg-6 mb-xs-0 mb-sm-5 mt-5\">\r\n                        {\" \"}\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            margin: \"auto\",\r\n                          }}\r\n                        >\r\n                          <SlidePuzzle\r\n                            handlepuzzlescore={handlepuzzlescore}\r\n                            fbimg={fbimg}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        class=\"col-lg-6  mb-5 mb-xl-3 mt-0 mt-sm-3 mt-md-0\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        <div>\r\n                          <SlidePuzzleAnswer fbimg={fbimg} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveSlidePuzzle;\r\n"],"sourceRoot":""}